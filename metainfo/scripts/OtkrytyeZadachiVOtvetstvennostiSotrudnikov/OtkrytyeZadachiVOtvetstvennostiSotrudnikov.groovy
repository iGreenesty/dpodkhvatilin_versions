//Назначение:
/**
 * Скрипт для вывода параметров
 * "Плановая дата с" - дата и время 00:00, обязательный
 * "Плановая дата по" - дата и время 23:59, обязательный
 * "Учитывать задачи без плановой даты начала" - тип "Логический", по умолчанию – "да"
 * "Учитывать задачи по всем сотрудникам" - тип "Логический", по умолчанию – "да"
 * "Или выберите конкретных отрудников" - тип "Набор ссылок на объекты" класса "Сотрудник", по умолчанию – пусто, есть сложная форма
* "Учитывать задачи по всем командам" - тип "Логический", по умолчанию – "да"
 * "Или выберите конкретные команды (задачи без персональной ответственности)" - тип "Набор ссылок на объекты" класса "Команда", по умолчанию – пусто, есть сложная форма
 * "Учитывать архивные задачи" - тип "Логический", по умолчанию – "да"
 */
//ОСНОВНОЙ БЛОК--------------------------------------------------------

def getParameters()
{
  return [ 
		api.parameters.getDateTime("dateFrom", "Плановая дата начала с", null, 'startOfDay', true),
		api.parameters.getDateTime("dateTo", "Плановая дата начала по", null, 'endOfDay', true),
		api.parameters.getBoolean("isNotPlanDate", "Учитывать задачи без плановой даты начала", true),
      	api.parameters.getBoolean("allEmployees", "Учитывать задачи по всем сотрудникам", true),
		api.parameters.getObjects("employeeList", "Или выберите конкретных отрудников", "employee", '', ['attrGroupCode' : 'fd153a0c-33bb-433e-903c-b2968592b9a2']),
      	api.parameters.getBoolean("allTeams", "Учитывать задачи по всем командам", true),
		api.parameters.getObjects("teamList", "Или выберите конкретные команды (задачи без персональной ответственности)", "team", "", ['attrGroupCode' : 'c561db88-b310-46cd-8e6c-d72d9920fa30']),
		api.parameters.getBoolean("isArchived", "Учитывать архивные задачи", true)
	] as List
}

// Базовый URL для генерации ссылок на задачи
table.addValue('baseURL', api.web.open('task$'))

// Текущая дата - дата формирования отчета
table.addValue('creationDate', new Date())